{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lau Cheuk Hang\\\\Desktop\\\\opm\\\\CodeTest\\\\ClinicExpo\\\\demoProject\\\\components\\\\RecordsForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\nimport RNPickerSelect, { defaultStyles } from 'react-native-picker-select';\nvar recordsRequest = axios.create({\n  baseURL: 'http://localhost:3000/record/'\n});\nvar medication = [{\n  label: 'medication00',\n  value: 0\n}, {\n  label: 'medication01',\n  value: 1\n}, {\n  label: 'medication02',\n  value: 2\n}, {\n  label: 'medication03',\n  value: 3\n}];\n\nvar RecordForm = function (_React$Component) {\n  _inherits(RecordForm, _React$Component);\n\n  var _super = _createSuper(RecordForm);\n\n  function RecordForm() {\n    var _this;\n\n    _classCallCheck(this, RecordForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      doctorName: \"\",\n      patientName: \"\",\n      diagnosis: \"\",\n      fee: 0,\n      dateTime: new Date(),\n      followConsultation: false,\n      medication: []\n    };\n\n    _this.onCreateRecord = function () {\n      loginRequest.post('/createRecord', {\n        record: {\n          doctorName: _this.state.doctorName,\n          patientName: _this.state.patientName,\n          diagnosis: _this.state.diagnosis,\n          fee: _this.state.fee,\n          dateTime: _this.state.dateTime,\n          followConsultation: _this.state.followConsultation,\n          medication: _this.state.medication\n        }\n      }).then(function (res) {\n        alert(res.data.msg);\n\n        if (res.data.status == 'success') {\n          _this.props.navigation.navigate('Main');\n        }\n      });\n    };\n\n    _this.addMedication = function () {\n      var medication = _extends([], _this.state.medication);\n\n      medication.push({\n        Id: 0\n      });\n\n      _this.setState({\n        medication: medication\n      });\n    };\n\n    _this.delMedication = function (index) {\n      var medication = _extends([], _this.state.medication);\n\n      medication.splice(index, 1);\n\n      _this.setState({\n        medication: medication\n      });\n    };\n\n    _this.changeMedication = function (value, index) {\n      var medication = _extends([], _this.state.medication);\n\n      medication[index] = value;\n\n      _this.setState({\n        medication: medication\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RecordForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var medication = this.state.medication;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, \"Consultation Records\"), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Email...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            doctorName: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            patientName: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            diagnosis: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            fee: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            dateTime: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            followConsultation: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.addMedication,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, \"Add\")), React.createElement(RNPickerSelect, {\n        placeholder: 'Date',\n        items: medication,\n        value: this.state.medication[index],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }), medication.map(function (item, index) {\n        React.createElement(RNPickerSelect, {\n          placeholder: 'Date',\n          items: medication,\n          onValueChange: function onValueChange(value) {\n            return _this2.changeMedication(value, index);\n          },\n          value: _this2.state.medication[index],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }\n        });\n      }), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.onCreateRecord,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n        style: styles.signupBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, \"Signup\")));\n    }\n  }]);\n\n  return RecordForm;\n}(React.Component);\n\nexport { RecordForm as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#0F8CCF',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: 'white'\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#72EA6F\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  signupBtn: {\n    width: \"80%\",\n    backgroundColor: \"#599BDA\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Lau Cheuk Hang/Desktop/opm/CodeTest/ClinicExpo/demoProject/components/RecordsForm.js"],"names":["StatusBar","React","axios","RNPickerSelect","defaultStyles","recordsRequest","create","baseURL","medication","label","value","RecordForm","state","doctorName","patientName","diagnosis","fee","dateTime","Date","followConsultation","onCreateRecord","loginRequest","post","record","then","res","alert","data","msg","status","props","navigation","navigate","addMedication","push","Id","setState","delMedication","index","splice","changeMedication","styles","container","logo","inputView","inputText","text","loginBtn","loginText","map","item","signupBtn","Component","StyleSheet","backgroundColor","flex","alignItems","justifyContent","fontWeight","fontSize","marginBottom","width","borderRadius","height","padding","color","forgot","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Button, Alert } from 'react-native';\r\nimport axios from 'axios';\r\nimport RNPickerSelect, { defaultStyles } from 'react-native-picker-select';\r\n\r\nconst recordsRequest = axios.create({\r\n    baseURL: 'http://localhost:3000/record/'\r\n});\r\n\r\nconst medication = [\r\n    {\r\n        label: 'medication00',\r\n        value: 0,\r\n    },\r\n    {\r\n        label: 'medication01',\r\n        value: 1,\r\n    },\r\n    {\r\n        label: 'medication02',\r\n        value: 2,\r\n    },\r\n    {\r\n        label: 'medication03',\r\n        value: 3,\r\n    },\r\n];\r\n\r\nexport default class RecordForm extends React.Component {\r\n    state = {\r\n        doctorName: \"\",\r\n        patientName: \"\",\r\n        diagnosis: \"\",\r\n        fee: 0,\r\n        dateTime: new Date(),\r\n        followConsultation: false,\r\n        medication: []\r\n    }\r\n    onCreateRecord = (() => {\r\n        loginRequest.post('/createRecord', {\r\n            record: {\r\n                doctorName: this.state.doctorName,\r\n                patientName: this.state.patientName,\r\n                diagnosis: this.state.diagnosis,\r\n                fee: this.state.fee,\r\n                dateTime: this.state.dateTime,\r\n                followConsultation: this.state.followConsultation,\r\n                medication: this.state.medication\r\n            }\r\n        }).then(res => {\r\n            alert(res.data.msg);\r\n            if (res.data.status == 'success') {\r\n                this.props.navigation.navigate('Main')\r\n            }\r\n            // Alert.alert(\r\n            //   'Hello',\r\n            //   'I am two option alert. Do you want to cancel me ?',\r\n            //   [\r\n            //     { text: 'Yes', onPress: () => console.log('Yes Pressed') },\r\n            //     {\r\n            //       text: 'No',\r\n            //       onPress: () => console.log('No Pressed'),\r\n            //       style: 'cancel',\r\n            //     },\r\n            //   ],\r\n            //   { cancelable: false }\r\n            // );    \r\n        });\r\n    });\r\n\r\n    addMedication = (() => {\r\n        var medication = Object.assign([], this.state.medication);\r\n        medication.push({ Id: 0 });\r\n        this.setState({\r\n            medication: medication\r\n        })\r\n    })\r\n\r\n    delMedication = ((index) => {\r\n        var medication = Object.assign([], this.state.medication);\r\n        medication.splice(index, 1);\r\n        this.setState({\r\n            medication: medication\r\n        })\r\n    })\r\n\r\n    changeMedication = ((value, index) => {\r\n        var medication = Object.assign([], this.state.medication);\r\n        medication[index] = value;\r\n        this.setState({\r\n            medication: medication\r\n        })\r\n    })\r\n\r\n    render() {\r\n        const { medication } = this.state\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.logo}>Consultation Records</Text>\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        style={styles.inputText}\r\n                        placeholder=\"Email...\"\r\n                        placeholderTextColor=\"#003f5c\"\r\n                        onChangeText={text => this.setState({ doctorName: text })} />\r\n                </View>\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        secureTextEntry\r\n                        style={styles.inputText}\r\n                        placeholder=\"Password...\"\r\n                        placeholderTextColor=\"#003f5c\"\r\n                        onChangeText={text => this.setState({ patientName: text })} />\r\n                </View>\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        secureTextEntry\r\n                        style={styles.inputText}\r\n                        placeholder=\"Password...\"\r\n                        placeholderTextColor=\"#003f5c\"\r\n                        onChangeText={text => this.setState({ diagnosis: text })} />\r\n                </View>\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        secureTextEntry\r\n                        style={styles.inputText}\r\n                        placeholder=\"Password...\"\r\n                        placeholderTextColor=\"#003f5c\"\r\n                        onChangeText={text => this.setState({ fee: text })} />\r\n                </View>\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        secureTextEntry\r\n                        style={styles.inputText}\r\n                        placeholder=\"Password...\"\r\n                        placeholderTextColor=\"#003f5c\"\r\n                        onChangeText={text => this.setState({ dateTime: text })} />\r\n                </View>\r\n\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        secureTextEntry\r\n                        style={styles.inputText}\r\n                        placeholder=\"Password...\"\r\n                        placeholderTextColor=\"#003f5c\"\r\n                        onChangeText={text => this.setState({ followConsultation: text })} />\r\n                </View>\r\n\r\n                <TouchableOpacity style={styles.loginBtn} onPress={this.addMedication}>\r\n                    <Text\r\n                        style={styles.loginText}\r\n                    >Add</Text>\r\n                </TouchableOpacity>\r\n                <RNPickerSelect\r\n                    placeholder={'Date'}\r\n                    items={medication}\r\n                    // onValueChange={(value) => this.changeMedication(value, index)}\r\n                    value={this.state.medication[index]}\r\n                // ref={el => {\r\n                //     this.inputRefs.favSport0 = el;\r\n                // }}\r\n                />\r\n\r\n                {\r\n                    medication.map((item, index) => {\r\n                        <RNPickerSelect\r\n                            placeholder={'Date'}\r\n                            items={medication}\r\n                            onValueChange={(value) => this.changeMedication(value, index)}\r\n                            value={this.state.medication[index]}\r\n                        // ref={el => {\r\n                        //     this.inputRefs.favSport0 = el;\r\n                        // }}\r\n                        />\r\n                    })\r\n                }\r\n\r\n                <TouchableOpacity style={styles.loginBtn} onPress={this.onCreateRecord}>\r\n                    <Text\r\n                        style={styles.loginText}\r\n                    >LOGIN</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.signupBtn}>\r\n                    <Text style={styles.loginText}>Signup</Text>\r\n                </TouchableOpacity>\r\n\r\n\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#0F8CCF',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    logo: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 50,\r\n        marginBottom: 40\r\n    },\r\n    inputView: {\r\n        width: \"80%\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        marginBottom: 20,\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n        backgroundColor: 'white',\r\n    },\r\n    inputText: {\r\n        height: 50,\r\n        color: \"white\"\r\n    },\r\n    forgot: {\r\n        color: \"white\",\r\n        fontSize: 11\r\n    },\r\n    loginBtn: {\r\n        width: \"80%\",\r\n        backgroundColor: \"#72EA6F\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 40,\r\n        marginBottom: 10\r\n    },\r\n    signupBtn: {\r\n        width: \"80%\",\r\n        backgroundColor: \"#599BDA\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginBottom: 10\r\n    },\r\n    loginText: {\r\n        color: \"white\"\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}