{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lau Cheuk Hang\\\\Desktop\\\\opm\\\\CodeTest\\\\ClinicExpo\\\\demoProject\\\\components\\\\RecordsForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport axios from 'axios';\nimport RNPickerSelect, { defaultStyles } from 'react-native-picker-select';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nvar recordsRequest = axios.create({\n  baseURL: 'http://localhost:3000/record/'\n});\nvar medicationItem = [{\n  label: 'medication00',\n  value: 0,\n  key: 0\n}, {\n  label: 'medication01',\n  value: 1,\n  key: 1\n}, {\n  label: 'medication02',\n  value: 2,\n  key: 2\n}, {\n  label: 'medication03',\n  value: 3,\n  key: 3\n}];\n\nvar RecordForm = function (_React$Component) {\n  _inherits(RecordForm, _React$Component);\n\n  var _super = _createSuper(RecordForm);\n\n  function RecordForm() {\n    var _this;\n\n    _classCallCheck(this, RecordForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      doctorName: \"\",\n      patientName: \"\",\n      diagnosis: \"\",\n      fee: 0,\n      dateTime: new Date(),\n      followConsultation: false,\n      medication: [],\n      isDatePickerVisible: false\n    };\n\n    _this.onCreateRecord = function () {\n      loginRequest.post('/createRecord', {\n        record: {\n          doctorName: _this.state.doctorName,\n          patientName: _this.state.patientName,\n          diagnosis: _this.state.diagnosis,\n          fee: _this.state.fee,\n          dateTime: _this.state.dateTime,\n          followConsultation: _this.state.followConsultation,\n          medication: _this.state.medication\n        }\n      }).then(function (res) {\n        alert(res.data.msg);\n\n        if (res.data.status == 'success') {\n          _this.props.navigation.navigate('Main');\n        }\n      });\n    };\n\n    _this.addMedication = function () {\n      var medication = _extends([], _this.state.medication);\n\n      medication.push({\n        Id: 0\n      });\n      console.log(\"medication\", medication);\n\n      _this.setState({\n        medication: medication\n      });\n    };\n\n    _this.delMedication = function (index) {\n      var medication = _extends([], _this.state.medication);\n\n      medication.splice(index, 1);\n\n      _this.setState({\n        medication: medication\n      });\n    };\n\n    _this.changeMedication = function (value, index) {\n      var medication = _extends([], _this.state.medication);\n\n      medication[index] = {\n        Id: value\n      };\n      console.log(\"index\", value, index);\n      console.log(\"medication\", medication);\n\n      _this.setState({\n        medication: medication\n      });\n    };\n\n    _this.changeDateTime = function (value) {\n      _this.setState({\n        dateTime: value\n      });\n    };\n\n    _this.showDatePicker = function () {\n      _this.setState({\n        isDatePickerVisible: true\n      });\n    };\n\n    _this.handleConfirm = function (date) {\n      _this.setState({\n        dateTime: date,\n        isDatePickerVisible: false\n      });\n    };\n\n    _this.hideDatePicker = function () {\n      _this.setState({\n        isDatePickerVisible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RecordForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          medication = _this$state.medication,\n          isDatePickerVisible = _this$state.isDatePickerVisible;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: styles.scrollContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, \"Consultation Records\"), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Doctor Name...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            doctorName: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Patient Name...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            patientName: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Diagnosis...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            diagnosis: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Fee...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            fee: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.inputView,\n        onPress: this.showDatePicker,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.logmedicationBtninText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, \"Select Date and Time\")), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Any Following Consultation...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            followConsultation: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.medicationBtn,\n        onPress: this.addMedication,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }\n      }, \"Add Mediction\")), medication.map(function (item, index) {\n        return React.createElement(RNPickerSelect, {\n          items: medicationItem,\n          onValueChange: function onValueChange(value) {\n            return _this2.changeMedication(value, index);\n          },\n          itemKey: 1,\n          value: item.key,\n          key: item.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }\n        });\n      }), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.onCreateRecord,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, \"Create\")), React.createElement(TouchableOpacity, {\n        style: styles.signupBtn,\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('Main');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, \"Back to Home\")), React.createElement(DateTimePickerModal, {\n        isVisible: isDatePickerVisible,\n        mode: \"date\",\n        onConfirm: this.handleConfirm,\n        onCancel: this.hideDatePicker,\n        date: this.state.dateTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return RecordForm;\n}(React.Component);\n\nexport { RecordForm as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#0F8CCF',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollContainer: {\n    alignItems: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: 'white'\n  },\n  inputText: {\n    height: 50,\n    color: \"black\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#72EA6F\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  medicationBtn: {\n    width: \"80%\",\n    backgroundColor: \"pink\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  signupBtn: {\n    width: \"80%\",\n    backgroundColor: \"#599BDA\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"black\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Lau Cheuk Hang/Desktop/opm/CodeTest/ClinicExpo/demoProject/components/RecordsForm.js"],"names":["StatusBar","React","axios","RNPickerSelect","defaultStyles","DateTimePickerModal","recordsRequest","create","baseURL","medicationItem","label","value","key","RecordForm","state","doctorName","patientName","diagnosis","fee","dateTime","Date","followConsultation","medication","isDatePickerVisible","onCreateRecord","loginRequest","post","record","then","res","alert","data","msg","status","props","navigation","navigate","addMedication","push","Id","console","log","setState","delMedication","index","splice","changeMedication","changeDateTime","showDatePicker","handleConfirm","date","hideDatePicker","styles","container","scrollContainer","logo","inputView","inputText","text","logmedicationBtninText","medicationBtn","loginText","map","item","loginBtn","signupBtn","Component","StyleSheet","backgroundColor","flex","alignItems","justifyContent","fontWeight","fontSize","marginBottom","width","borderRadius","height","padding","color","forgot","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Button, Alert, ScrollView } from 'react-native';\r\nimport axios from 'axios';\r\nimport RNPickerSelect, { defaultStyles } from 'react-native-picker-select';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n\r\nconst recordsRequest = axios.create({\r\n    baseURL: 'http://localhost:3000/record/'\r\n});\r\n\r\nconst medicationItem = [\r\n    {\r\n        label: 'medication00',\r\n        value: 0,\r\n        key: 0\r\n    },\r\n    {\r\n        label: 'medication01',\r\n        value: 1,\r\n        key: 1\r\n\r\n    },\r\n    {\r\n        label: 'medication02',\r\n        value: 2,\r\n        key: 2\r\n\r\n    },\r\n    {\r\n        label: 'medication03',\r\n        value: 3,\r\n        key: 3\r\n\r\n    },\r\n];\r\n\r\nexport default class RecordForm extends React.Component {\r\n    state = {\r\n        doctorName: \"\",\r\n        patientName: \"\",\r\n        diagnosis: \"\",\r\n        fee: 0,\r\n        dateTime: new Date(),\r\n        followConsultation: false,\r\n        medication: [],\r\n        isDatePickerVisible: false\r\n    }\r\n    onCreateRecord = (() => {\r\n        loginRequest.post('/createRecord', {\r\n            record: {\r\n                doctorName: this.state.doctorName,\r\n                patientName: this.state.patientName,\r\n                diagnosis: this.state.diagnosis,\r\n                fee: this.state.fee,\r\n                dateTime: this.state.dateTime,\r\n                followConsultation: this.state.followConsultation,\r\n                medication: this.state.medication\r\n            }\r\n        }).then(res => {\r\n            alert(res.data.msg);\r\n            if (res.data.status == 'success') {\r\n                this.props.navigation.navigate('Main')\r\n            }\r\n            // Alert.alert(\r\n            //   'Hello',\r\n            //   'I am two option alert. Do you want to cancel me ?',\r\n            //   [\r\n            //     { text: 'Yes', onPress: () => console.log('Yes Pressed') },\r\n            //     {\r\n            //       text: 'No',\r\n            //       onPress: () => console.log('No Pressed'),\r\n            //       style: 'cancel',\r\n            //     },\r\n            //   ],\r\n            //   { cancelable: false }\r\n            // );    \r\n        });\r\n    });\r\n\r\n    addMedication = (() => {\r\n        var medication = Object.assign([], this.state.medication);\r\n        medication.push({ Id: 0 });\r\n        console.log(\"medication\", medication);\r\n        this.setState({\r\n            medication: medication\r\n        })\r\n    })\r\n\r\n    delMedication = ((index) => {\r\n        var medication = Object.assign([], this.state.medication);\r\n        medication.splice(index, 1);\r\n        this.setState({\r\n            medication: medication\r\n        })\r\n    })\r\n\r\n    changeMedication = ((value, index) => {\r\n        var medication = Object.assign([], this.state.medication);\r\n        medication[index] = { Id: value };\r\n        console.log(\"index\", value, index);\r\n\r\n        console.log(\"medication\", medication);\r\n\r\n        this.setState({\r\n            medication: medication\r\n        })\r\n    })\r\n\r\n    changeDateTime = ((value) => {\r\n        this.setState({\r\n            dateTime: value\r\n        })\r\n    })\r\n\r\n    showDatePicker = () => {\r\n        this.setState({\r\n            isDatePickerVisible: true\r\n        });\r\n    };\r\n\r\n    handleConfirm = (date) => {\r\n        this.setState({\r\n            dateTime: date,\r\n            isDatePickerVisible: false\r\n        });\r\n    };\r\n\r\n    hideDatePicker = () => {\r\n        this.setState({\r\n            isDatePickerVisible: false\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { medication, isDatePickerVisible } = this.state;\r\n        return (\r\n            <View style={styles.container}>\r\n                <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n                    <Text style={styles.logo}>Consultation Records</Text>\r\n                    <View style={styles.inputView} >\r\n                        <TextInput\r\n                            style={styles.inputText}\r\n                            placeholder=\"Doctor Name...\"\r\n                            placeholderTextColor=\"#003f5c\"\r\n                            onChangeText={text => this.setState({ doctorName: text })} />\r\n                    </View>\r\n                    <View style={styles.inputView} >\r\n                        <TextInput\r\n                            \r\n                            style={styles.inputText}\r\n                            placeholder=\"Patient Name...\"\r\n                            placeholderTextColor=\"#003f5c\"\r\n                            onChangeText={text => this.setState({ patientName: text })} />\r\n                    </View>\r\n                    <View style={styles.inputView} >\r\n                        <TextInput\r\n                            \r\n                            style={styles.inputText}\r\n                            placeholder=\"Diagnosis...\"\r\n                            placeholderTextColor=\"#003f5c\"\r\n                            onChangeText={text => this.setState({ diagnosis: text })} />\r\n                    </View>\r\n                    <View style={styles.inputView} >\r\n                        <TextInput\r\n                            \r\n                            style={styles.inputText}\r\n                            placeholder=\"Fee...\"\r\n                            placeholderTextColor=\"#003f5c\"\r\n                            onChangeText={text => this.setState({ fee: text })} />\r\n                    </View>\r\n\r\n                    <TouchableOpacity style={styles.inputView} onPress={this.showDatePicker} >\r\n                        <Text\r\n                            style={styles.logmedicationBtninText}\r\n                        >Select Date and Time</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <View style={styles.inputView} >\r\n                        <TextInput\r\n                            \r\n                            style={styles.inputText}\r\n                            placeholder=\"Any Following Consultation...\"\r\n                            placeholderTextColor=\"#003f5c\"\r\n                            onChangeText={text => this.setState({ followConsultation: text })} />\r\n                    </View>\r\n\r\n                    <TouchableOpacity style={styles.medicationBtn} onPress={this.addMedication}>\r\n                        <Text\r\n                            style={styles.loginText}\r\n                        >Add Mediction</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    {\r\n                        medication.map((item, index) => {\r\n                            return (\r\n                                <RNPickerSelect\r\n                                    items={medicationItem}\r\n                                    onValueChange={(value) => this.changeMedication(value, index)}\r\n                                    itemKey={1}\r\n                                    value={item.key}\r\n                                    key={item.key}\r\n\r\n                                // ref={el => {\r\n                                //     this.inputRefs.favSport0 = el;\r\n                                // }}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                    <TouchableOpacity style={styles.loginBtn} onPress={this.onCreateRecord}>\r\n                        <Text\r\n                            style={styles.loginText}\r\n                        >Create</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.signupBtn} onPress={() => {\r\n                        this.props.navigation.navigate('Main')\r\n                    }}>\r\n                        <Text style={styles.loginText}>Back to Home</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <DateTimePickerModal\r\n                        isVisible={isDatePickerVisible}\r\n                        mode=\"date\"\r\n                        onConfirm={this.handleConfirm}\r\n                        onCancel={this.hideDatePicker}\r\n                        date={this.state.dateTime}\r\n                    />\r\n                </ScrollView>\r\n            </View>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#0F8CCF',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    scrollContainer: {\r\n        alignItems: 'center',\r\n    },\r\n    logo: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 50,\r\n        marginBottom: 40\r\n    },\r\n    inputView: {\r\n        width: \"80%\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        marginBottom: 20,\r\n        justifyContent: \"center\",\r\n        padding: 20,\r\n        backgroundColor: 'white',\r\n    },\r\n    inputText: {\r\n        height: 50,\r\n        color: \"black\"\r\n    },\r\n    forgot: {\r\n        color: \"white\",\r\n        fontSize: 11\r\n    },\r\n    loginBtn: {\r\n        width: \"80%\",\r\n        backgroundColor: \"#72EA6F\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 40,\r\n        marginBottom: 10\r\n    },\r\n    medicationBtn: {\r\n        width: \"80%\",\r\n        backgroundColor: \"pink\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 40,\r\n        marginBottom: 10\r\n    },\r\n    signupBtn: {\r\n        width: \"80%\",\r\n        backgroundColor: \"#599BDA\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginBottom: 10\r\n    },\r\n    loginText: {\r\n        color: \"black\"\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}