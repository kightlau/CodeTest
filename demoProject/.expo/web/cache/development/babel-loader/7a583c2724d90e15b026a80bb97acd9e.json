{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lau Cheuk Hang\\\\Desktop\\\\opm\\\\CodeTest\\\\ClinicExpo\\\\demoProject\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.onPress = function () {};\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, \"Records\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return alert('Hello, world!');\n        },\n        style: {\n          backgroundColor: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, \"Pick a photo\")), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n        style: styles.signupBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Signup\")));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#0F8CCF',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: 'white'\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#72EA6F\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  signupBtn: {\n    width: \"80%\",\n    backgroundColor: \"#599BDA\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Lau Cheuk Hang/Desktop/opm/CodeTest/ClinicExpo/demoProject/components/Main.js"],"names":["StatusBar","React","axios","Main","state","email","password","onPress","styles","container","logo","alert","backgroundColor","fontSize","color","inputView","inputText","text","setState","loginBtn","loginText","signupBtn","Component","StyleSheet","create","flex","alignItems","justifyContent","fontWeight","marginBottom","width","borderRadius","height","padding","forgot","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Button, Alert } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nexport default class Main extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  }\r\n  onPress = (() => {\r\n    \r\n  });\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.logo}>Records</Text>\r\n        <TouchableOpacity\r\n          onPress={() => alert('Hello, world!')}\r\n          style={{ backgroundColor: 'blue' }}>\r\n          <Text style={{ fontSize: 20, color: '#fff' }}>Pick a photo</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.inputView} >\r\n          <TextInput\r\n            secureTextEntry\r\n            style={styles.inputText}\r\n            placeholder=\"Password...\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            onChangeText={text => this.setState({ password: text })} />\r\n        </View>\r\n        <TouchableOpacity style={styles.loginBtn} onPress={this.onPress}>\r\n          <Text\r\n            style={styles.loginText}\r\n          >LOGIN</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.signupBtn}>\r\n          <Text style={styles.loginText}>Signup</Text>\r\n        </TouchableOpacity>\r\n\r\n\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#0F8CCF',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  logo: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 50,\r\n    marginBottom: 40\r\n  },\r\n  inputView: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    marginBottom: 20,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n  },\r\n  inputText: {\r\n    height: 50,\r\n    color: \"white\"\r\n  },\r\n  forgot: {\r\n    color: \"white\",\r\n    fontSize: 11\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#72EA6F\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    marginBottom: 10\r\n  },\r\n  signupBtn: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#599BDA\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 10\r\n  },\r\n  loginText: {\r\n    color: \"white\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}